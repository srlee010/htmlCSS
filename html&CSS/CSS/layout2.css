div {
  box-sizing: border-box;
}

/* input {
  box-sizing: border-box;
} */

/* selector에서 콤마(,)쓰면 중복선택가능 */
div, input, textarea {
  box-sizing : border-box;
}


body {
  margin: 0;
}

html {
  line-height : 1.15; /*기본 행간 높이*/
}


.main-background {
  width: 100%;
  height: 500px;
  /* 배경에 검은색 그라디언트 틴트 주기 */
  background-image: linear-gradient(rgba(0,0,0,0.5), rgba(0,0,0,0.5)), url(../img/shoes.jpg);
  /* 배경짤려도 상관없으니 빈공간 없이 div사이즈에 배경을 꽉 채워라 */
  background-size: cover;
  /* div 여백이 남아도 되니까 배경짤리지 않게 하기 
  background-size: contain; 
  */
  /* 반응형에 따라 배경이미지가 반복되지 않게 하기 */
  background-repeat: no-repeat;
  background-position: center;
  padding: 1px;
  position: relative;
}

.main-title {
  color: white;
  font-size: 40px;
  margin-top: 100px;
  text-align: center;
}

.sub-title {
  color: white;
  font-size: 15px;
  text-align: center;
  font-weight: 300;
}

.main-button {
  padding: 15px 30px;
  background-color: rgb(238, 107, 107);
  border-radius: 10px;
  border: none;
  font-size: 15px;
   /* position 속성 (기준점)
   position: relative; 란? 
   '내 원래 위치를 기준으로 이동하세요~' 의미 이걸 먼저 쓰면  
   1. 좌표이동가능
   2. 공중에 뜸
  position: relative;
  top: 10px;
  left: 400px;
   */

   /* positon: absolute;
   내 부모중에 position: relative를 가진 부모 기준 움직이고 싶을 때 사용
   부모 요소에 relative를 추가해야 적용됨 */

   position: absolute;
   /* position: absoulte준 요소를 가운데 정렬하려면? 적어도 5개 속성 필요 */
   left: 0;
   right: 0;
   margin-left: auto;
   margin-right: auto;
   margin-top: 50px;
   width: 150px;
}

/* self ver.
  .explain-box {
  background-color: #e9e4e4;
  position: relative;
  top: -30px;
  display: block;
  margin-left: 200px;
  margin-right: 200px;
  padding: 20px;
} 
*/

/*코딩애플 ver.*/
.explain-box {
  background-color: #eee;
  max-width: 600px;
  margin: auto;
  padding: 20px;
  text-align: center;
  position: relative;
  top: -30px;
  /* z-index
  공중에 떠 있는 애들이 많으면
  누가 맨 앞에 올 것인가?
  z-index가 높을 수록 앞으로 다가온다, 낮을수록 뒤로 빠짐 */
  z-index: 1;
  /* ⭐️padding, border포함한 width값 설정하기 (모든 div에 설정해놓으면 편함) */
  box-sizing: border-box;
  border-radius: 4px;
} 


.contact-background {
  background-color: rgb(70, 69, 69);
  position: absolute;
  left: 0;
  right: 0;
  margin-left: auto;
  margin-right: auto;
  margin-top: 30px;
  width: 700px;
  height: 600px;
  position: relative;
  border-radius: 4px;
}

.input-background {
  background-color: white;
  width: 500px;
  height: 500px;
  position: absolute;
  left: 0;
  left: 0;
  right: 0;
  margin-left: auto;
  margin-right: auto;
  margin-top: 50px;
  border-radius: 4px;
}

.input-container {
  width: 400px;
  height: 400px;
  margin: 50px;
  /* border: 1px solid gray; */
}

.input-container h1 {
  margin: 0;
}

.input-container h3 {
  margin-top: 15px;
  margin-bottom: 3px;
}

/* form {
  width: 400px;
  margin: auto;
  position: relative;
  text-align: center;
} */

/* input이 많은데 개별적으로 다 선언해야하나? 놉! 
-> selector 문법사용: input[속성명=속성값] */


/* 모든 input인데 type이 text인것만 적용하란 의미 */


input[type=email] {
  width: 390px;
  height: 20px;
  padding: 4px;
  font-size: 10px;
  border-radius: 5px;
  border: 1px solid #b3acac;
}

input[type=name] {
  width: 170px;
  height: 20px;
  padding: 4px;
  font-size: 10px;
  border-radius: 5px;
  border: 1px solid #b3acac;
  display: inline-block;
}

input[type=message] {
  width: 390px;
  height: 150px;
  padding: 4px;
  font-size: 10px;
  border-radius: 5px;
  border: 1px solid #b3acac;
  display: inline-block;
}

h3 {
  display: block;
}

.firstName {
  /* inline-block is ignored due to the float. If 'float' has a value other than 'none', the box is floated and 'display' is treated as 'block' */
  /* display: inline-block; */
  float: left;
}

.lastName {
  /* display: inline-block; */
  float: right;
}



.orange-button {
  color: white;
  padding: 10px;
  border-radius: 3px;
  border-style: none;
  background: orange;
  float: right;
}

